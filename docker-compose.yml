services:
  fleetmanager.service.admin:
    image: malcommedina/fleetmanager-service-admin:latest
    restart: always
    build:
      context: .
      dockerfile: src/api/Service.Admin/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${PROJECT_ASPNETCORE_ENVIRONMENT}
      - TZ=${PROJECT_TIMEZONE}
      - PROJECT_SERVICE_ADMIN_PORT=${PROJECT_SERVICE_ADMIN_PORT}
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_DOMAIN=${PROJECT_DOMAIN}
      - PROJECT_DOMAIN_API=${PROJECT_DOMAIN_API}
      - PROJECT_DB_CONNECTION_STRING=${PROJECT_DB_CONNECTION_STRING}
      - PROJECT_SENTRY_KEY=${PROJECT_SENTRY_KEY}
      - AUTH_SECRET_KEY=${AUTH_SECRET_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SSL=${SMTP_SSL}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_TIMEOUT=${SMTP_TIMEOUT}
    volumes:
      - ./media:/app/media
    ports:
       - "${PROJECT_SERVICE_ADMIN_PORT}:8080"
    networks:
      - fleetm_stag_network

  fleetmanager.service.business-partner:
    image: malcommedina/fleetmanager-service-business-partners:latest
    restart: always
    build:
      context: .
      dockerfile: src/api/Service.BusinessPartners/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${PROJECT_ASPNETCORE_ENVIRONMENT}
      - TZ=${PROJECT_TIMEZONE}
      - PROJECT_SERVICE_BUSINESS_PARTNER_PORT=${PROJECT_SERVICE_BUSINESS_PARTNER_PORT}
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_DOMAIN=${PROJECT_DOMAIN}
      - PROJECT_DOMAIN_API=${PROJECT_DOMAIN_API}
      - PROJECT_DB_CONNECTION_STRING=${PROJECT_DB_CONNECTION_STRING}
      - PROJECT_SENTRY_KEY=${PROJECT_SENTRY_KEY}
      - AUTH_SECRET_KEY=${AUTH_SECRET_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SSL=${SMTP_SSL}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_TIMEOUT=${SMTP_TIMEOUT}
    volumes:
      - ./media:/app/media
    ports:
       - "${PROJECT_SERVICE_BUSINESS_PARTNER_PORT}:8080"
    networks:
      - fleetm_stag_network

  fleetmanager.service.customers:
    image: malcommedina/fleetmanager-service-customers:latest
    restart: always
    build:
      context: .
      dockerfile: src/api/Service.Customers/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${PROJECT_ASPNETCORE_ENVIRONMENT}
      - TZ=${PROJECT_TIMEZONE}
      - PROJECT_SERVICE_CUSTOMERS_PORT=${PROJECT_SERVICE_CUSTOMERS_PORT}
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_DOMAIN=${PROJECT_DOMAIN}
      - PROJECT_DOMAIN_API=${PROJECT_DOMAIN_API}
      - PROJECT_DB_CONNECTION_STRING=${PROJECT_DB_CONNECTION_STRING}
      - PROJECT_SENTRY_KEY=${PROJECT_SENTRY_KEY}
      - AUTH_SECRET_KEY=${AUTH_SECRET_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SSL=${SMTP_SSL}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_TIMEOUT=${SMTP_TIMEOUT}
    volumes:
      - ./media:/app/media
    ports:
       - "${PROJECT_SERVICE_CUSTOMERS_PORT}:8080"
    networks:
      - fleetm_stag_network

  fleetmanager.service.shipments:
    image: malcommedina/fleetmanager-service-shipments:latest
    restart: always
    build:
      context: .
      dockerfile: src/api/Service.Shipments/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${PROJECT_ASPNETCORE_ENVIRONMENT}
      - TZ=${PROJECT_TIMEZONE}
      - PROJECT_SERVICE_SHIPMENTS_PORT=${PROJECT_SERVICE_SHIPMENTS_PORT}
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_DOMAIN=${PROJECT_DOMAIN}
      - PROJECT_DOMAIN_API=${PROJECT_DOMAIN_API}
      - PROJECT_DB_CONNECTION_STRING=${PROJECT_DB_CONNECTION_STRING}
      - PROJECT_SENTRY_KEY=${PROJECT_SENTRY_KEY}
      - AUTH_SECRET_KEY=${AUTH_SECRET_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SSL=${SMTP_SSL}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_TIMEOUT=${SMTP_TIMEOUT}
    volumes:
      - ./media:/app/media
    ports:
       - "${PROJECT_SERVICE_SHIPMENTS_PORT}:8080"
    networks:
      - fleetm_stag_network

  fleetmanager.service.cdn:
    image: nginx:latest
    restart: always
    ports:
      - "${PROJECT_SERVICE_CDN_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./media:/usr/share/nginx/html/media
    networks:
      - fleetm_stag_network

networks:
  fleetm_stag_network:
    name: fleetm_stag_network