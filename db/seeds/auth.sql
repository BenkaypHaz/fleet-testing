CREATE DATABASE "FleetManager";

--auth
CREATE SCHEMA IF NOT EXISTS auth;

-- DROP TABLE auth.auth_user
CREATE TABLE auth.auth_user (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
	dni VARCHAR(15)NOT NULL,
	gender VARCHAR(1),
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    user_name VARCHAR(30) NOT NULL,
    email VARCHAR(80) NOT NULL,
    profile_picture TEXT,
    phone_number VARCHAR(15),
    birth_date DATE,
    password TEXT NOT NULL,
    reset_password BOOLEAN NOT NULL,
    created_by BIGINT NOT NULL,
    created_date TIMESTAMP NOT NULL,
    modified_by BIGINT,
    modified_date TIMESTAMP,
    is_active BOOLEAN NOT NULL,
    CONSTRAINT pk_auth_user_id PRIMARY KEY (id),
    CONSTRAINT fk_auth_user_created_by FOREIGN KEY (created_by) REFERENCES auth.auth_user(id),
    CONSTRAINT fk_auth_user_modified_by FOREIGN KEY (modified_by) REFERENCES auth.auth_user(id)
);

-- DROP TABLE auth.auth_module
CREATE TABLE auth.auth_module (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    name VARCHAR(60) NOT NULL,
    created_by BIGINT NOT NULL,
    created_date TIMESTAMP NOT NULL,
    modified_by BIGINT,
    modified_date TIMESTAMP,
    is_active BOOLEAN NOT NULL,
    CONSTRAINT pk_auth_module_id PRIMARY KEY (id),
    CONSTRAINT fk_auth_module_created_by FOREIGN KEY (created_by) REFERENCES auth.auth_user(id),
    CONSTRAINT fk_auth_module_modified_by FOREIGN KEY (modified_by) REFERENCES auth.auth_user(id)
);

-- DROP TABLE auth.auth_authorization
CREATE TABLE auth.auth_authorization (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    description VARCHAR(300),
    route_value VARCHAR(300),
    module_id BIGINT,
    created_by BIGINT NOT NULL,
    created_date TIMESTAMP NOT NULL,
    modified_by BIGINT,
    modified_date TIMESTAMP,
    is_active BOOLEAN NOT NULL,
    CONSTRAINT pk_auth_authorization_id PRIMARY KEY (id),
    CONSTRAINT fk_auth_authorization_module_id FOREIGN KEY (module_id) REFERENCES auth.auth_module(id),
    CONSTRAINT fk_auth_authorization_created_by FOREIGN KEY (created_by) REFERENCES auth.auth_user(id),
    CONSTRAINT fk_auth_authorization_modified_by FOREIGN KEY (modified_by) REFERENCES auth.auth_user(id)
);

-- DROP TABLE auth.auth_role
CREATE TABLE auth.auth_role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    description VARCHAR(200) NOT NULL,
    created_by BIGINT NOT NULL,
    created_date TIMESTAMP NOT NULL,
    modified_by BIGINT,
    modified_date TIMESTAMP,
    is_active BOOLEAN NOT NULL,
    CONSTRAINT pk_auth_role_id PRIMARY KEY (id),
    CONSTRAINT fk_auth_role_created_by FOREIGN KEY (created_by) REFERENCES auth.auth_user(id),
    CONSTRAINT fk_auth_role_modified_by FOREIGN KEY (modified_by) REFERENCES auth.auth_user(id)
);

-- DROP TABLE auth.auth_role_authorization
CREATE TABLE auth.auth_role_authorization (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    role_id BIGINT NOT NULL,
    auth_id BIGINT NOT NULL,
    read BOOLEAN NOT NULL,
    "cread" BOOLEAN NOT NULL,
    update BOOLEAN NOT NULL,
    delete BOOLEAN NOT NULL,
    created_by BIGINT NOT NULL,
    created_date TIMESTAMP NOT NULL,
    modified_by BIGINT,
    modified_date TIMESTAMP,
    is_active BOOLEAN NOT NULL,
    CONSTRAINT pk_auth_role_authorization_id PRIMARY KEY (id),
    CONSTRAINT fk_auth_role_authorization_role_id FOREIGN KEY (role_id) REFERENCES auth.auth_role(id),
    CONSTRAINT fk_auth_role_authorization_auth_id FOREIGN KEY (auth_id) REFERENCES auth.auth_authorization(id),
    CONSTRAINT fk_auth_role_authorization_created_by FOREIGN KEY (created_by) REFERENCES auth.auth_user(id),
    CONSTRAINT fk_auth_role_authorization_modified_by FOREIGN KEY (modified_by) REFERENCES auth.auth_user(id)
);

-- DROP TABLE auth.auth_user_role
CREATE TABLE auth.auth_user_role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    created_by BIGINT NOT NULL,
    created_date TIMESTAMP NOT NULL,
    modified_by BIGINT,
    modified_date TIMESTAMP,
    is_active BOOLEAN NOT NULL,
    CONSTRAINT pk_auth_user_role_id PRIMARY KEY (id),
    CONSTRAINT fk_auth_user_role_user_id FOREIGN KEY (user_id) REFERENCES auth.auth_user(id),
    CONSTRAINT fk_auth_user_role_role_id FOREIGN KEY (role_id) REFERENCES auth.auth_role(id),
    CONSTRAINT fk_auth_user_role_created_by FOREIGN KEY (created_by) REFERENCES auth.auth_user(id),
    CONSTRAINT fk_auth_user_role_modified_by FOREIGN KEY (modified_by) REFERENCES auth.auth_user(id)
);

-- DROP TABLE auth.auth_user_forgot_pwd_token
CREATE TABLE auth.auth_user_forgot_pwd_token (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    token TEXT NOT NULL,
    user_id BIGINT NOT NULL,
    expiration_date TIMESTAMP NOT NULL,
    created_by BIGINT,
    created_date TIMESTAMP NOT NULL,
	is_active BOOLEAN NOT NULL,
    CONSTRAINT pk_auth_user_forgot_pwd_token_id PRIMARY KEY (id),
    CONSTRAINT fk_auth_user_forgot_pwd_token_user_id FOREIGN KEY (user_id) REFERENCES auth.auth_user(id),
    CONSTRAINT fk_auth_user_forgot_pwd_token_created_by FOREIGN KEY (created_by) REFERENCES auth.auth_user(id)
);